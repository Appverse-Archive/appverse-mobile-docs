Ext.data.JsonP.beacons({"guide":"<h1 id='beacons-section-monitoring-beacon-devices'>Monitoring Beacon Devices</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ul>\n<li>1. <a href='#!/guide/beacons-section-what-is-a-beacon%3F'>What is a Beacon?</a>\n <ul>\n<li>1.1. <a href='#!/guide/beacons-section-android'>Android</a>\n </li>\n<li>1.2. <a href='#!/guide/beacons-section-ios'>iOS</a>\n </li>\n<li>1.3. <a href='#!/guide/beacons-section-beacons-events'>Beacons Events</a>\n </li>\n</ul></li>\n<li>2. <a href='#!/guide/beacons-section-how-to-subscribe-to-a-listener'>How to subscribe to a listener</a>\n <ul>\n<li>2.1. <a href='#!/guide/beacons-section-overriding-rules'>Overriding Rules</a>\n </li>\n</ul></li>\n</ul></div>\n\n<h2 id='beacons-section-what-is-a-beacon%3F'>What is a Beacon?</h2>\n\n<p>A <strong>Beacon</strong> is a device designed to attact attencion to a specific location emiting a Bluetooth Low Energy (<strong>BLE</strong>) signal.</p>\n\n<p>There are two different approaches due to the platform limitations.</p>\n\n<h3 id='beacons-section-android'>Android</h3>\n\n<p>For Android you could just call:</p>\n\n<p><strong>BEWARE</strong>: You must have your Bluetooth active for using this API's.</p>\n\n<ul>\n<li><strong><a href=\"#!/api/Appverse.Beacon-method-StartMonitoringAllRegions\" rel=\"Appverse.Beacon-method-StartMonitoringAllRegions\" class=\"docClass\">Appverse.Beacon.StartMonitoringAllRegions</a>()</strong> or</li>\n<li><strong><a href=\"#!/api/Appverse.Beacon-method-StartMonitoringRegion\" rel=\"Appverse.Beacon-method-StartMonitoringRegion\" class=\"docClass\">Appverse.Beacon.StartMonitoringRegion</a>(UUID)</strong> with the UUID of the region you want to track, the UUID is a unique identifier for a group of beacons, you can get this data by calling the previous <strong><a href=\"#!/api/Appverse.Beacon-method-StartMonitoringAllRegions\" rel=\"Appverse.Beacon-method-StartMonitoringAllRegions\" class=\"docClass\">Appverse.Beacon.StartMonitoringAllRegions</a>()</strong> or just looking for it in your beacon device provider info.</li>\n</ul>\n\n\n<p>After 5 seconds of calling any of this method, the native system will call <strong><a href=\"#!/api/Appverse.Beacon-method-StopMonitoringBeacons\" rel=\"Appverse.Beacon-method-StopMonitoringBeacons\" class=\"docClass\">Appverse.Beacon.StopMonitoringBeacons</a>()</strong> and invoke the <strong>Beacon</strong> events listed bellow.</p>\n\n<h3 id='beacons-section-ios'>iOS</h3>\n\n<ul>\n<li><strong><a href=\"#!/api/Appverse.Beacon-method-StartMonitoringRegion\" rel=\"Appverse.Beacon-method-StartMonitoringRegion\" class=\"docClass\">Appverse.Beacon.StartMonitoringRegion</a>(UUID)</strong> with the UUID of the region you want to track, the UUID is a unique identifier for a group of beacons, you can get this data by calling the previous <strong><a href=\"#!/api/Appverse.Beacon-method-StartMonitoringAllRegions\" rel=\"Appverse.Beacon-method-StartMonitoringAllRegions\" class=\"docClass\">Appverse.Beacon.StartMonitoringAllRegions</a>()</strong> or just looking for it in your beacon device provider info.</li>\n</ul>\n\n\n<p>After 5 seconds of calling any of this method, the native system will call <strong><a href=\"#!/api/Appverse.Beacon-method-StopMonitoringBeacons\" rel=\"Appverse.Beacon-method-StopMonitoringBeacons\" class=\"docClass\">Appverse.Beacon.StopMonitoringBeacons</a>()</strong> and invoke the <strong>Beacon</strong> events listed bellow.</p>\n\n<h3 id='beacons-section-beacons-events'>Beacons Events</h3>\n\n<ul>\n<li><strong><a href=\"#!/api/Appverse.Beacon-event-OnEntered\" rel=\"Appverse.Beacon-event-OnEntered\" class=\"docClass\">Appverse.Beacon.OnEntered</a></strong>: Lets your app be aware that a previously detected beacon is found again.</li>\n<li><strong><a href=\"#!/api/Appverse.Beacon-event-OnExited\" rel=\"Appverse.Beacon-event-OnExited\" class=\"docClass\">Appverse.Beacon.OnExited</a></strong>: Lets your app to be aware that a previously detected beacon is not found.</li>\n<li><strong><a href=\"#!/api/Appverse.Beacon-event-OnDiscover\" rel=\"Appverse.Beacon-event-OnDiscover\" class=\"docClass\">Appverse.Beacon.OnDiscover</a></strong>: Lets your app to be aware that a new beacon is discovered.</li>\n<li><strong><a href=\"#!/api/Appverse.Beacon-event-OnUpdateProximity\" rel=\"Appverse.Beacon-event-OnUpdateProximity\" class=\"docClass\">Appverse.Beacon.OnUpdateProximity</a></strong>: Lets your app to be aware that the distance of a known beacon has changed.</li>\n</ul>\n\n\n<h2 id='beacons-section-how-to-subscribe-to-a-listener'>How to subscribe to a listener</h2>\n\n<p>In order to subscribe your app to a specific listener, you must <strong>override</strong> the corresponding <strong>Appverse listener method function</strong> in your application javascript code.</p>\n\n<p>The following are the rules to be applied when implementing that \"listeners overriding\".</p>\n\n<h3 id='beacons-section-overriding-rules'>Overriding Rules</h3>\n\n<ol>\n<li><p>The file that contains the <strong>overridden function</strong> must be located <strong>after</strong> the platform javascript library: <strong>appverse.js</strong>.</p>\n\n<p> Be careful where you place your &lt;script src=\"xxx.js\"&gt;&lt;/script&gt; javascript links.</p>\n\n<p> The javascript imports order inside you main HTML should be:</p>\n\n<pre><code> &lt;script src=\"appverse.js\"&gt;&lt;/script&gt;\n ...\n &lt;script src=\"myscripts-with-overrided-listeners.js\"&gt;&lt;/script&gt;\n</code></pre></li>\n<li><p>The variables used inside that overridden function must be <strong>global</strong>.</p>\n\n<p> The listeners are being executed in a <strong>global scope</strong> from the native side. So, all the variables and methods used inside the overridden listeners should be also global accessed (recursively).</p></li>\n</ol>\n\n","title":"Monitoring Beacon Devices"});